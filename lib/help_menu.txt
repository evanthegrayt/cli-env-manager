Install options (must pass at least one of these options)
  -a         | Allow ignored files to be installed
  -f         | Install all dotfiles
  -F [FILE]  | Install a single dotfile
  -v         | Install vimfiles
  -z         | Install 'oh-my-zsh'
  -b         | Install 'bash-it'
  -c         | Install git repositories in config/git_repos.yml
  -m         | Install MacOS files I need for work, such as
             + rvm, command-line-tools, homebrew, git-lfs, virtualbox, vagrant

Additional install options (default: Don't add these settings)
  -C [SHELL] | Change login shell to [SHELL]
  -i         | Enable terminal italics

Handling old dotfiles; pass with '-f' (default: Do nothing if they exist)
  -B         | Replace old dotfiles, but move pre-existing copies to `backup/`,
             + and rename them to `[FILE].$( date +%Y%m%d%H%M%S )`
  -L         | If file already exists, move it to `backup/` and rename it to
             + `[FILE].$( date +%Y%m%d%H%M%S ).local`. Lastly, symbolically link
             + it back in the $HOME directory. This is different from '-B',
             + because my dotfiles will source a file of the same name if it's
             + in the home directory with the '.local' extension. This allows
             + for additional settings to be applied on different systems.

Uninstalling dotfiles
  -u         | Unlink all files
  -U [FILE]  | Unlink FILE
  -R         | With `-u` or `-U`; if dotfile exists with in `backup/` with
             + backup extension, restore the newest copy back to original name.

Log Files
  -p         | Print the logfile for today's date, if it exists.
  -P [DATE]  | Print the logfile for given [DATE], if it exists. [DATE] must be
             + in the same format as `$LOGFILE_DATESTAMP`, which is CCYY-MM-DD
             + by default. This can be changed in `lib/constants.sh`.
  -l         | List all logfiles in the `log/` directory.

Usage options
  -h         | Print this help and exit
